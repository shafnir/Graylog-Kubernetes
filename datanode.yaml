apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: graylog-datanode-pvc
  namespace: graylog
spec:
  storageClassName: hostpath # Can be used for manual PV provisioning, or automatic provisioning using the hostpath provisioner from https://artifacthub.io/packages/helm/rimusz/hostpath-provisioner
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi # Set as much storage as you need for your datanode storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: datanode
  name: datanode
  namespace: graylog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datanode
  strategy: {}
  template:
    metadata:
      labels:
        app: datanode
    spec:
      hostname: datanode
      restartPolicy: Always
      volumes:
      - name: graylog-datanode
        persistentVolumeClaim:
          claimName: graylog-datanode-pvc
      initContainers:
      - name: wait-for-mogodb
        image: busybox
        command: ["sh", "-c", "until nc -z mongodb 27017; do echo Waiting for mongodb availability; sleep 1; done;"]
      containers:
      - image: graylog/graylog-datanode:6.1.10
        name: datanode
        env:
        - name: GRAYLOG_DATANODE_NODE_ID_FILE
          value: "/var/lib/graylog-datanode/node-id"
        - name: GRAYLOG_DATANODE_MONGODB_URI
          value: "mongodb://mongodb:27017/graylog"
        - name: GRAYLOG_DATANODE_PASSWORD_SECRET
          valueFrom:
            secretKeyRef:
              name: graylog-password-secret
              key: GRAYLOG_PASSWORD_SECRET
        ports:
        - containerPort: 8999
        - containerPort: 9200
        - containerPort: 9300
        volumeMounts:
        - mountPath: /var/lib/graylog-datanode
          name: graylog-datanode
        resources:
          requests:
            memory: "1Gi"
          limits:
            memory: "3Gi"
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: datanode
  name: datanode
  namespace: graylog
spec:
  ports:
  - name: datanode-api
    port: 8999
    protocol: TCP
    targetPort: 8999
  - name: port-9200
    port: 9200
    protocol: TCP
    targetPort: 9200
  - name: port-9300
    port: 9300
    protocol: TCP
    targetPort: 9300
  selector:
    app: datanode
status:
  loadBalancer: {}
